from telegram import Update, ReplyKeyboardRemove
from telegram.ext import (
    ContextTypes, 
    ConversationHandler,
)
from telegram.constants import ParseMode


from .functions import keyboard, make_buttons
from .config import logger
from .list import main_menu

import subprocess

PLATFORM_NAME, RANGE = range(2)

async def make_links(update, context):
    await context.bot.send_message(chat_id=update.effective_chat.id, 
                                text="–í–≤–µ–¥–∏—Ç–µ ID –≤–∞—à–µ–π google —Ç–∞–±–ª–∏—Ü—ã\n\n"
                                    "–í–≤–µ–¥–∏—Ç–µ '/cancel' –¥–ª—è –æ—Ç–º–µ–Ω—ã", 
                                reply_markup=await keyboard(['/cancel']))
    return PLATFORM_NAME


async def cancel(update: Update, context: ContextTypes.DEFAULT_TYPE) -> int:
    """Cancels and ends the conversation."""

    await context.bot.send_message(chat_id=update.effective_chat.id, 
                                text="–í—ã –≤—ã—à–ª–∏ –∏–∑ —Ñ–æ—Ä–º—ã —Å–æ–∑–¥–∞–Ω–∏—è HTML —Ç–∞–±–ª–∏—Ü—ã",
                                reply_markup=ReplyKeyboardRemove())
    await context.bot.send_message(chat_id=update.effective_chat.id, 
                                text="–û–∑–Ω–∞–∫–æ–º—Å—è —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π –∏ –ø–æ–ª—å–∑—É–π—Å—è üëç",
                                reply_markup=await make_buttons(main_menu))
    return ConversationHandler.END


async def make_range(update, context):

    context.user_data['table_id'] = update.message.text

    await context.bot.send_message(chat_id=update.effective_chat.id, 
                                text="–í–≤–µ–¥–∏—Ç–µ –¥–∏–∞–ø–∞–∑–æ–Ω —è—á–µ–µ–∫ –≤–∞—à–µ–π —Ç–∞–±–ª–∏—Ü—ã, –Ω–∞–ø—Ä–∏–º–µ—Ä A1:C4\n"
                                    "–î–æ–ø—É—Å—Ç–∏–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö A:Z\n\n"
                                    "–í–≤–µ–¥–∏—Ç–µ '/cancel' –¥–ª—è –æ—Ç–º–µ–Ω—ã", 
                                reply_markup=await keyboard(['/cancel']))
    return RANGE



